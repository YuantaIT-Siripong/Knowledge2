{ "$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://example.com/schemas/fcn/v1.0/test-vector.schema.json", "title": "FCN Test Vector (Normalized Form)", "description": "Normalized machine-readable representation of an FCN test vector scenario for validation.", "type": "object", "required": ["id", "product_code", "spec_version", "branch_id", "observations", "expected"], "additionalProperties": false, "properties": { "id": { "type": "string", "pattern": "^N[0-9]+|EX[0-9]+$", "description": "Test vector code (normative N* or non-normative EX*)." }, "product_code": { "type": "string", "const": "FCN" }, "spec_version": { "type": "string", "pattern": "^1\.0\.0$" }, "branch_id": { "type": "string", "enum": ["base_mem", "base_nomem"], "description": "Normative branch identifier." }, "description": { "type": "string" }, "parameters": { "type": "object", "description": "Subset of trade-level parameters relevant to scenario; validated against parameter schema where present.", "additionalProperties": true }, "underlyings": { "type": "array", "description": "Ordered underlying symbol list (mirrors parameters.underlying_symbols).", "items": { "type": "string" }, "minItems": 1 }, "observations": { "type": "array", "description": "Per observation date underlying levels and derived flags (if pre-computed).", "minItems": 1, "items": { "type": "object", "required": ["seq", "date", "levels"], "additionalProperties": false, "properties": { "seq": { "type": "integer", "minimum": 0 }, "date": { "type": "string", "format": "date" }, "levels": { "type": "array", "description": "Underlying levels aligned with 'underlyings' index.", "items": { "type": "number", "exclusiveMinimum": 0 }, "minItems": 1 }, "precalc": { "type": "object", "description": "Optional precomputed booleans (validator may recompute).", "additionalProperties": false, "properties": { "level_ok": { "type": "boolean" }, "barrier_breach": { "type": "boolean" } } } } } }, "expected": { "type": "object", "required": ["ki_triggered", "coupon_flows"], "additionalProperties": false, "properties": { "ki_triggered": { "type": "boolean" }, "coupon_flows": { "type": "array", "description": "Coupon flow outcomes per observation sequence (only those that pay).", "items": { "type": "object", "required": ["seq", "paid_amount"], "additionalProperties": false, "properties": { "seq": { "type": "integer", "minimum": 0 }, "paid_amount": { "type": "number", "minimum": 0 }, "accrued_unpaid_before": { "type": "integer", "minimum": 0 }, "accrued_unpaid_after": { "type": "integer", "minimum": 0 } } } }, "final_redemption_amount": { "type": "number", "description": "Expected principal redemption amount." } } }, "tags": { "type": "array", "items": { "type": "string" }, "description": "Scenario classification tags (e.g., 'edge-barrier', 'single-miss')." }, "notes": { "type": "string" } } }